<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.twister</groupId>
  <artifactId>organization-charts</artifactId>
  <version>v1.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Organization-Charts</name>
  <description>Organization Charts project with Spring Boot</description>

  <modules>
    <module>api</module>
  </modules>

  <properties>
    <java.version>1.8</java.version>
    <docker.context>${project.basedir}</docker.context>
    <image.name>organization-chart</image.name>
    <io.fabric.version>0.33.0</io.fabric.version>
    <mysql.connector.version>8.0.18</mysql.connector.version>
    <h2database.version>1.4.199</h2database.version>
    <springframework.boot.version>2.5.12</springframework.boot.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <scm>
    <connection>scm:git:https://github.com/usoni2210/Organization-Charts.git</connection>
    <developerConnection>scm:git:https://github.com/usoni2210/Organization-Charts.git</developerConnection>
    <url>https://github.com/usoni2210/Organization-Charts</url>
  </scm>

  <distributionManagement>
      <repository>
        <id>github</id>
        <name>Github Package</name>
        <url>file://${project.build.directory}/mvn-repo</url>
<!--        <url>https://maven.pkg.github.com/usoni2210</url>-->
      </repository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <!-- Spring Boot Dependency -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
        <version>${springframework.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${springframework.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${springframework.boot.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <version>${springframework.boot.version}</version>
        <scope>runtime</scope>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${springframework.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.4</version>
          <executions>
            <execution>
              <id>generate-build-info</id>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
              <configuration>
                <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                <timestampFormat>{0,date,yyyy-MM-dd_HHmmss}</timestampFormat>
                <items>
                  <item>timestamp</item>
                </items>
                <shortRevisionLength>10</shortRevisionLength>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.0.0</version>
          <executions>
            <execution>
              <id>generate-module-properties</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>write-project-properties</goal>
              </goals>
              <configuration>
                <outputFile>${project.build.directory}/mvn-build.properties</outputFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${io.fabric.version}</version>
          <executions>
            <execution>
              <id>docker-image-build</id>
              <goals>
                <goal>build</goal>
                <goal>push</goal>
              </goals>
              <configuration>
                <verbose>true</verbose>
                <retries>2</retries>
                <images>
                  <image>
                    <name>${image.name}:${project.version}</name>
                    <build>
                      <tags>
                        <tag>${scmBranch}_${buildNumber}_${timestamp}</tag>
                      </tags>
                      <buildOptions>
                        <labels>{"com.twister.project":"${project.name}"}</labels>
                      </buildOptions>
                      <dockerFileDir>${docker.context}</dockerFileDir>
                    </build>
                  </image>
                </images>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>